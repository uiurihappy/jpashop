//querydsl 추가 buildscript {
buildscript {
	dependencies {
		classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10"
	}
}

plugins {
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

apply plugin: "com.ewerk.gradle.plugins.querydsl"

group = 'jpabook'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext["hibernate.version"] = "5.6.5.Final"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.1'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'com.querydsl:querydsl-jpa'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//JUnit4 추가
	testImplementation("org.junit.vintage:junit-vintage-engine") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	}
}

//querydsl 추가
//def querydslDir = 'src/main/generated'
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslDir]
		}
	}
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	querydsl.extendsFrom compileClasspath
}
test {
	useJUnitPlatform()
}

compileQuerydsl.doFirst {
	if(file(querydslDir).exists() )
		delete(file(querydslDir))
}

/**** QueryDSL Class Generate Script to avoid lombok error ****/
def queryDslOutput = file("src/main/generated")
sourceSets {
	main {
		java {
			srcDir queryDslOutput
		}
	}
}

//task generateQueryDSL(type: JavaCompile, group: 'build') {
//	source = sourceSets.main.java
//	classpath = configurations.compile
//	destinationDir = queryDslOutput
//	options.compilerArgs = [
//			"-proc:only",
//			"-processor", 'com.querydsl.apt.jpa.JPAAnnotationProcessor,lombok.launch.AnnotationProcessorHider$AnnotationProcessor'
//	]
//}
//compileJava.dependsOn(generateQueryDSL)

clean {
	delete queryDslOutput
}

//Querydsl 추가, 자동 생성된 Q클래스 gradle clean으로 제거
//clean {
//	delete file('src/main/generated')
//}
